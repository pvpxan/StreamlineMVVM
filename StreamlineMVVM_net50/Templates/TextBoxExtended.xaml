<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ext="clr-namespace:StreamlineMVVM"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="TextBoxExtended" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="112"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFABAdB3"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ext:Extensions.TextBoxOverlay" Value="OverlayGlyph"/>
        <Setter Property="ext:Extensions.ContentText" Value="OverlayText"/>
        <Setter Property="ext:Extensions.ImageSourcePath" Value="pack://application:,,,/StreamlineMVVM;component/Graphics/search-icon.png"/>
        <Setter Property="ext:Extensions.ImageHeight" Value="24"/>
        <Setter Property="ext:Extensions.ImageWidth" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="overlayGlyph" Margin="2,0,0,0"
                                  Height="{Binding Path=(ext:Extensions.ImageHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                  Width="{Binding Path=(ext:Extensions.ImageWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                  HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                                <Grid.Background>
                                    <ImageBrush ImageSource="{Binding Path=(ext:Extensions.ImageSourcePath), RelativeSource={RelativeSource TemplatedParent}}"
                                                Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality"/>
                                </Grid.Background>
                            </Grid>
                            <Grid x:Name="overlayText" Margin="2,0,0,0"
                                  Height="{TemplateBinding Height}"
                                  HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                                <Label Margin="{TemplateBinding Padding}"
                                       Padding="0,0,0,0"
                                       VerticalAlignment="Center"
                                       VerticalContentAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontWeight="Bold"
                                       Foreground="LightGray"
                                       Content="{Binding Path=(ext:Extensions.ContentText), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ext:Extensions.TextBoxOverlay" Value="OverlayGlyph"/>
                                <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="overlayGlyph" Value="Visible"/>
                            <Setter Property="CaretBrush" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ext:Extensions.TextBoxOverlay" Value="OverlayText" />
                                <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="overlayText" Value="Visible"/>
                            <Setter Property="CaretBrush" Value="Transparent"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>